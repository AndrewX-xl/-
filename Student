#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main()
{
	int i,j,n,num,num1,flag=0,t=0,k,work,str,max,min;
	char ID[20][20];
	char name[20][20];
	int Cpp[20][20];
	char ID1[20],name_[20],temp[20];
	int n1,n2,n3,n4,n5;
	n1=n2=n3=n4=n5=0;
	double ave=0.0;
	while(1)
	{
		printf("---------------ѧ���ɼ���Ϣ����---------------\n");
		printf("1.¼��  2.��ʾ  3.����  4.����  5.ͳ��  0.�˳�\n");
		printf("----------------------------------------------\n");
		int ch;
		printf("������ѡ����:");
		scanf("%d",&ch);
		if(ch==0)
			{
				printf("���򼴽��˳�!\n");
				return 0;
			}
		else if(ch!=1&&flag==0)
			{	
				printf("û�и�ѧ����Ϣ��\n");
				system("pause");
				system("cls"); 
				continue;
			}
		else
		{
		switch(ch)
		{
			case 1:printf("���������ӵ�ѧ������:");
				   scanf("%d",&n);
				   n=t+n;
				   for(i=t;i<n;i++)
				   {
				   		for(j=0;j<1;j++)
				   		{
				   			printf("�������%d��ѧ����ѧ��:",i+1);
				   			scanf("%s",ID[i]);
				   			getchar();       //�Իس�!!! 
				   			printf("�������%d��ѧ��������:",i+1);
							scanf("%s",name[i]);
							getchar();
							printf("�����%d��ѧ��C���Գɼ���0~100��:",i+1);
						do
						{
							scanf("%d",&Cpp[i]);
							if(Cpp[i][j]>100||Cpp[i][j]<0)
							{
								printf("�ɼ����Ϸ�,����������:");
							}
						}while(Cpp[i][j]>100||Cpp[i][j]<0);
						
						printf("������¼��ɹ���\n");
						}
						flag++;
				   }
				   t=n;
				   	system("pause");
					system("cls"); 	
					break;
		case 2:printf("ѧ��\t\t����\t\tC����\n");
			   for(i=0;i<n;i++)
			   	for(j=0;j<1;j++)
			   		printf("%s\t\t%s\t\t%d\n",ID[i],name[i],Cpp[i][j]);		   	
					system("pause");
					system("cls"); 	
					break;
					
		case 3:while(1)
				{
					printf("1-��ѧ�Ų���   2-����������   0-����:");
			   		scanf("%d",&num);
			   if(num==0) 
			   {
			   		printf("�����˳�!\n");
			   		system("pause");
					system("cls");
			   		break;
				} 
				else if(num==1)
				{
			 		printf("����Ҫ���ҵ�ѧ��:");
			   		fflush(stdin); 
				   	gets(ID1);
					for(j=0;j<n;j++)
					{
			   			for(i=0;i<n;i++)
	                    {	
							if(strcmp(ID[i],ID1)==0)
							break; 
					    }
					    if(i>=n)
						{
							printf("\n���޴��ˣ�\n");
							continue;
						}
						else
						{
							printf("ѧ��\t\t����\t\tC����\n");
			   				printf("%s\t\t%s\t\t%d\n",ID[i],name[i],Cpp[j][i]);
							break;
						}		
					}
				}
				else if(num==2)
				{
					printf("����Ҫ���ҵ�������");
					fflush(stdin);
					gets(name_);
					 	for(j=0;j<n;j++)
					   	{
			   			   for(i=0;i<n;i++)
	                       {	
								if(strcmp(name[i],name_)==0)
								break; 
					     	}
					     	if(i>=n)
								{
									printf("\n���޴��ˣ�\n");
									continue;
								}
							else
							{
								printf("ѧ��\t\t����\t\tC����\n");
			   						printf("%s\t\t%s\t\t%d\n",ID[i],name[i],Cpp[j][i]);
								break;
							}		
						}
					}
				}break;
		case 4: while(1)//���� 
				{
					printf("1-��ѧ�ţ�����\t2-���ɼ�������\t0-����:");
					scanf("%d",&num1);
					if(num1==0) 
			   		{
			   			printf("�����˳�!\n");
			   			system("pause");
						system("cls");
			   			break;
					} 
					else if(num1==1)
					 {
				 		printf("�����Ľ����\n");
				 		printf("ѧ��\t\t����\t\tC����\n");
				 		for(i=0;i<n;i++)
				 		{
				 			for(j=0;j<n-1-i;j++)
				 			{
				 				if (strcmp(ID[i],ID[i+1])>0)
				 				{
				 					strcpy(temp,ID[j]); strcpy(ID[j],ID[j+1]); strcpy(ID[j+1],temp);
				 					str=Cpp[i][j]; Cpp[i][j]=Cpp[i+1][j]; Cpp[i+1][j]=str;
				 					strcpy(temp,name[j]); strcpy(name[j],name[j+1]); strcpy(name[j+1],temp);
				 				 	break;
								 }
							 }
							 printf("%s\t\t%s\t\t%d\n",ID[i],name[i],Cpp[i][0]);
						 }
					 }	
					 else if(num1==2)
					 {
				 		printf("�����Ľ����\n");
				 		printf("ѧ��\t\t����\t\tC����\n");
				 		for(i=0;i<n;i++)
				 		{
				 			for(j=0;j<n-1-i;j++)
				 			{
				 				if(Cpp[i][j]<Cpp[i+1][j])
				 				{
				 					strcpy(temp,ID[j]); strcpy(ID[j],ID[j+1]); strcpy(ID[j+1],temp);
				 					str=Cpp[i][j]; Cpp[i][j]=Cpp[i+1][j]; Cpp[i+1][j]=str;
				 					strcpy(temp,name[j]); strcpy(name[j],name[j+1]); strcpy(name[j+1],temp);
				 					break; 
								 }
							 }
							 printf("%s\t\t%s\t\t%d\n",ID[i],name[i],Cpp[i][0]);
						 }
					
					 }
					 
					 
					 
				 } break;
		case 5:printf("*******************************************************\n"); 
			   printf("�ɼ�ͳ�ƽ����\n"); 
			   printf("ѧ������:%5d\n",n);
			   max=min=Cpp[0][0];
			   for(i=0;i<n;i++)
			   	for(j=0;j<1;j++)
			   	{
			   		if(Cpp[i][j]>max)
			   			max=Cpp[i][j];
			   		if(Cpp[i][j]<min)
			   			min=Cpp[i][j];
			   		ave=ave+Cpp[i][j];
				}
				printf("��߷�:%7d\n��ͷ�:%7d\nƽ���ɼ�:%7.1f\n\n",max,min,ave/n);
				printf("�ɼ��ֲ����:\n");
				printf("������\t����\t�ٷֱ�\n");
				for(i=0;i<n;i++)
				{
					for(j=0;j<1;j++)
					{
						if(Cpp[i][j]<=100&&Cpp[i][j]>=90) n1++;
						else if(Cpp[i][j]<90&&Cpp[i][j]>=80) n2++;
						else if(Cpp[i][j]<80&&Cpp[i][j]>=70) n3++;
						else if(Cpp[i][j]<70&&Cpp[i][j]>=60) n4++;
						else n5++;
					}
				}
				//n1/n*100
				printf("100-90\t%d\t%.2f%%\n",n1,(double)n1/n*100);
				printf("89-80\t%d\t%.2f%%\n",n2,(double)n2/n*100);
				printf("79-70\t%d\t%.2f%%\n",n3,(double)n3/n*100);
				printf("69-60\t%d\t%.2f%%\n",n4,(double)n4/n*100);
				printf("59-0\t%d\t%.2f%%\n",n5,(double)n5/n*100);
				printf("********************************************************\n");
				system("pause");
				system("cls");
				break;
				}
			 }
 		}
 	 return 0;
 
 }


